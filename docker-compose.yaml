version: "3.8"

services:
  # ------------------------------------------------------
  # ZOOKEEPER
  # ------------------------------------------------------
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "${ZOOKEEPER_PORT}:2181"
    networks:
      - my_network
    restart: always
    profiles: ["infra"]

  # ------------------------------------------------------
  # KAFKA
  # ------------------------------------------------------
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "${KAFKA_PORT}:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:${KAFKA_PORT}"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - my_network
    restart: always
    profiles: ["infra"]

  # ------------------------------------------------------
  # POSTGRES
  # ------------------------------------------------------
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network
    restart: always
    profiles: ["infra"]

  # ------------------------------------------------------
  # MONGODB
  # ------------------------------------------------------
  mongodb:
    image: mongo:5
    container_name: mongodb
    ports:
      - "${MONGODB_PORT}:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - my_network
    restart: always
    profiles: ["infra"]

  # ------------------------------------------------------
  # ZIPKIN
  # ------------------------------------------------------
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    ports:
      - "${ZIPKIN_PORT}:9411"
    networks:
      - my_network
    restart: always
    profiles: ["infra"]

# ------------------------------------------------------
# NETWORK & VOLUMES
# ------------------------------------------------------
networks:
  my_network:
    driver: bridge

volumes:
  postgres_data:
  mongodb_data:
